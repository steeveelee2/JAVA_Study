package test.method;

public class NonStaticSample {
	public NonStaticSample(){}
	
	//1. 반환값 없고 매개변수 없는 메소드
	//실행 요청시 1~45까지의 임의의 정수 6개 중복되지 않게 발생시켜 출력하는 메소드
	//메소드명 : printLottoNumbers
	
	
	//2. 반환값 없고 매개변수 있는 메소드
	//실행 요청시 정수 하나, 문자 하나를 전달받아 문자를 정수 갯수만큼 출력하는 메소드
	//메소드명 : outputChar
	
	
	//3. 반환값 있고 매개변수 없는 메소드
	//실행 요청시 알파벳 범위의 임의의 영문자를 하나 발생시켜 리턴하는 메소드
	//메소드명 : alphabette
	
	
	//4. 반환값 있고 매개변수 있는 메소드
	//실행 요청시 문자열과 시작인덱스, 끝인덱스를 전달받아 해당 인덱스 범위의 문자열을
	//추출하여 리턴하는 메소드. 단 문자열은 반드시 값이 있어야함. 없으면 null 리턴처리
	//메소드명 : mySubstring
	


// Non-static Method
	
	//// 1. 반환값 없고 매개변수 없는 메소드
	public void printLottoNumber() {
		
		for(int i = 0; i < 7 ; i++) {
			System.out.print((new Random().nextInt(45)+1)+"\t");
		}
		System.out.println();
	}
	
	//// 2. 반환값 없고 매개변수 있는 메소드
	public void outputChar(char ch, int num) {
		
		for(int i = 0; i < num ; i++) {
			System.out.print(ch+"\t");
		}
		System.out.println();
	}

	//// 3. 반환값 있고 매개변수 없는 메소드
	public char alphabette(){
		Random r = new Random();
		boolean check = r.nextBoolean();
		char ch;
		if(check) {
			ch = (char)(r.nextInt(26)+65);
		} else {
			ch = (char)(r.nextInt(26)+97);
		}
		
		return ch;
		// return check ? (char)(r.nextInt(26)+65) : (char)(r.nextInt(26)+97);
	}

	//// 4. 반환값 있고 매개변수 있는 메소드
	public String mySubstring(String str, int start, int end) {
		String result = "";
		if(str != null) {
			char[] chArr = str.toCharArray();
			
			for(int i = start; i < chArr.length && i < end ; i++) {
					result += chArr[i];
			}
			
		} else {
			System.out.println("추출할 문자열이 없습니다.");
		}
		
		return result;
	}


